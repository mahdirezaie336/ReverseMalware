from socket import socket
import threading
import json
import pprint


def handle_client(client_socket):
    # Get the first data from the client
    data = client_socket.recv(1024)
    print(f"Client {client_socket.getpeername()[0]}:{client_socket.getpeername()[1]} info:")
    pprint.pprint(json.loads(data.decode()))
    while True:
        # Get data from client
        request = client_socket.recv(1024).decode()

        # Print client ip and port and the request message
        print(f"Client {client_socket.getpeername()[0]}:{client_socket.getpeername()[1]} sent: {request}")

        # Check if client wants to exit
        if request == "exit":
            break
        client_socket.send("OK".encode())


def start_server(host, port):
    # Create socket
    server = socket()
    server.bind((host, port))

    # Listen for connections
    print("Listening for connections...")
    server.listen(5)

    try:
        while True:
            client, address = server.accept()
            print(f"Received connection from: {address[0]}:{address[1]}")
            client_handler = threading.Thread(target=handle_client, args=(client,))
            client_handler.start()
    except KeyboardInterrupt:
        print("Server shutting down...")
    finally:
        server.close()


if __name__ == '__main__':
    # Read the config file
    with open('config.json', 'r') as f:
        config = json.load(f)
    # Start the server
    start_server(config['host'], config['port'])
